  var Fe = function (e) {
        var t = this;
        this.serializeTags = function () {
            var e = {};
            return t.$tabs.each((function (n, i) {
                var o = r()(i), s = o.data("tag"), a = o.data("templates-order").split(","),
                    l = t.$cells.filter((function () {
                        return a.includes(r()(this).data("name"))
                    }));
                e[s] = {$tab: o, $cells: l, templatesOrder: a}
            })), e
        }, this.handleTabClick = function (e) {
            e.preventDefault();
            var n = r()(e.target).data("tag");
            Object(k.c)("change_resume_templates_category", {tab: n}), t.showTag(n)
        }, this.toggleTabState = function (e, n) {
            t.tags[e].$tab.toggleClass("templates-filter__tab--active", n)
        }, this.showTag = function (e) {
            if (e !== t.activeTagName && !t.isAnimated) {
                t.isAnimated = !0, t.$grid.addClass("templates-grid--hidden"), t.toggleTabState(t.activeTagName, !1), t.activeTagName = e, t.toggleTabState(e, !0), t.moveSelectorTo(e), t.loadTagContent(e), setTimeout((function () {
                    t.$cells.addClass("templates-grid__cell--hidden"), t.tags[e].$cells.removeClass("templates-grid__cell--hidden"), t.sortTemplates(e), t.$grid.removeClass("templates-grid--hidden"), t.isAnimated = !1
                }), 300);
                var n = t.tags[e].$tab.attr("href");
                history.replaceState({}, "", n)
            }
        }, this.sortTemplates = function (e) {
            t.tags[e].templatesOrder.forEach((function (e) {
                t.$grid.find('[data-name="' + e + '"]').appendTo(t.$grid)
            }))
        }, this.moveSelectorTo = function (e) {
            var n = t.tags[e].$tab, i = n.position().left, r = n.width();
            t.$selector.css("transform", "translateX(" + i + "px) scaleX(" + r / 100 + ")"), t.$selector.removeClass("templates-filter__tabs-selector--hidden")
        }, this.renderTagContent = function (e) {
            if (e === t.activeTagName) {
                var n = t.tags[e];
                t.$headerTitle.text(n.headerTitle), t.$headerSubtitle.text(n.headerSubtitle), t.$content.html(n.content || ""), t.$post.css("display", n.content ? "block" : "none")
            }
        }, this.loadTagContent = function (e) {
            var n = t.tags[e];
            if (n.loaded) return t.renderTagContent(e);
            r.a.get(t.infoUrl + "?slug=" + e).done((function (i) {
                Object.assign(n, {
                    loaded: !0,
                    headerTitle: i.title,
                    headerSubtitle: i.subtitle,
                    content: i.content
                }), t.renderTagContent(e)
            }))
        }, 0 !== e.length && (this.$root = e, this.$filter = e.find(".templates-filter"), this.$tabs = this.$filter.find(".templates-filter__tab"), this.$selector = this.$filter.find(".templates-filter__tabs-selector"), this.$grid = e.find(".templates-grid"), this.$cells = e.find(".templates-grid__cell"), this.$headerTitle = e.find(".templates-root__header-title"), this.$headerSubtitle = e.find(".templates-root__header-subtitle"), this.$post = e.find(".blog-post"), this.$content = this.$post.find(".blog-post__content-main-wrapper"), this.infoUrl = this.$root.data("info-url"), this.activeTagName = e.data("current-tag"), this.tags = this.serializeTags(), this.isAnimated = !1, this.$tabs.on("click", this.handleTabClick), r()(window).on("load resize", (function () {
            t.moveSelectorTo(t.activeTagName)
        })))
    };
    document.addEventListener("DOMContentLoaded", (function () {
        new Fe(r()(".templates-root"))
    }));